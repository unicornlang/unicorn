// Implied whitespace
WHITESPACE = _{ " " | NEWLINE }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

// Primitives
alpha = @{ 'a'..'z' | 'A'..'Z' }
digit = @{ '0'..'9' }
num = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }
int = { ("+" | "-")? ~ ASCII_DIGIT+ }

// Basic tokens
ident = @{ alpha ~ (alpha | digit)* }
text = @{
    "\""
    ~ text_character*
    ~ "\""
}
text_character = {
    !"\""
    ~ ANY
}
basic_type = {ident~("*"*)?}

// Expressions
add = {"+"}
subtract = {"-"}
multiply = {"/"}
divide = {"*"}
operation = _{ add | subtract | multiply | divide }
term = _{ num | "(" ~ expr ~ ")" | ident~"(" ~ expr ~ ")" }
expr = { term ~ (operation ~ term)* }

// Statements
mutable  = {"mut"}
statement = { basic_type~mutable?~ident ~"="~expr~";"}
statements = {statement*}

// Top level statements
referant = {"ref"}
self_referant = {"self"}
parameter = {referant?~mutable?~basic_type~ident}
function = {("export")? ~ basic_type~ident~"("~(self_referant~",")?~(parameter~(","~parameter)*)?~")"~"{"~statements~"}"}
using = {"use"~text}
structure = {"struct"~ident~"{"~function*~"}"}
top_level = { function|structure|using }

//Entry
program = { SOI ~ top_level* ~ EOI }
